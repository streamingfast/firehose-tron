// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: sf/tron/type/v1/block.proto

package pbtron

import (
	core "github.com/streamingfast/tron-protocol/pb/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Potential error values for a Transaction taken from Tron protocol definition
// source: https://github.com/tronprotocol/protocol/blob/2a678934da3992b1a67f975769bbb2d31989451f/api/api.proto#L1041
type ResponseCode int32

const (
	ResponseCode_SUCCESS                         ResponseCode = 0
	ResponseCode_SIGERROR                        ResponseCode = 1 // error in signature
	ResponseCode_CONTRACT_VALIDATE_ERROR         ResponseCode = 2
	ResponseCode_CONTRACT_EXE_ERROR              ResponseCode = 3
	ResponseCode_BANDWITH_ERROR                  ResponseCode = 4
	ResponseCode_DUP_TRANSACTION_ERROR           ResponseCode = 5
	ResponseCode_TAPOS_ERROR                     ResponseCode = 6
	ResponseCode_TOO_BIG_TRANSACTION_ERROR       ResponseCode = 7
	ResponseCode_TRANSACTION_EXPIRATION_ERROR    ResponseCode = 8
	ResponseCode_SERVER_BUSY                     ResponseCode = 9
	ResponseCode_NO_CONNECTION                   ResponseCode = 10
	ResponseCode_NOT_ENOUGH_EFFECTIVE_CONNECTION ResponseCode = 11
	ResponseCode_BLOCK_UNSOLIDIFIED              ResponseCode = 12
	ResponseCode_OTHER_ERROR                     ResponseCode = 20
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0:  "SUCCESS",
		1:  "SIGERROR",
		2:  "CONTRACT_VALIDATE_ERROR",
		3:  "CONTRACT_EXE_ERROR",
		4:  "BANDWITH_ERROR",
		5:  "DUP_TRANSACTION_ERROR",
		6:  "TAPOS_ERROR",
		7:  "TOO_BIG_TRANSACTION_ERROR",
		8:  "TRANSACTION_EXPIRATION_ERROR",
		9:  "SERVER_BUSY",
		10: "NO_CONNECTION",
		11: "NOT_ENOUGH_EFFECTIVE_CONNECTION",
		12: "BLOCK_UNSOLIDIFIED",
		20: "OTHER_ERROR",
	}
	ResponseCode_value = map[string]int32{
		"SUCCESS":                         0,
		"SIGERROR":                        1,
		"CONTRACT_VALIDATE_ERROR":         2,
		"CONTRACT_EXE_ERROR":              3,
		"BANDWITH_ERROR":                  4,
		"DUP_TRANSACTION_ERROR":           5,
		"TAPOS_ERROR":                     6,
		"TOO_BIG_TRANSACTION_ERROR":       7,
		"TRANSACTION_EXPIRATION_ERROR":    8,
		"SERVER_BUSY":                     9,
		"NO_CONNECTION":                   10,
		"NOT_ENOUGH_EFFECTIVE_CONNECTION": 11,
		"BLOCK_UNSOLIDIFIED":              12,
		"OTHER_ERROR":                     20,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_tron_type_v1_block_proto_enumTypes[0].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_sf_tron_type_v1_block_proto_enumTypes[0]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{0}
}

// Block represents a Tron block from the RPC response
type Block struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Block hash in bytes
	Id            []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Header        *BlockHeader   `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Transactions  []*Transaction `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// BlockHeader represents the block header from the RPC response
type BlockHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Block number (height)
	Number uint64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// Merkle root of all transactions in the block
	TxTrieRoot []byte `protobuf:"bytes,2,opt,name=tx_trie_root,json=txTrieRoot,proto3" json:"tx_trie_root,omitempty"`
	// Address of the block producer (witness)
	WitnessAddress []byte `protobuf:"bytes,3,opt,name=witness_address,json=witnessAddress,proto3" json:"witness_address,omitempty"`
	ParentNumber   uint64 `protobuf:"varint,4,opt,name=parent_number,json=parentNumber,proto3" json:"parent_number,omitempty"`
	ParentHash     []byte `protobuf:"bytes,5,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Version        uint32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// Block timestamp in milliseconds since Unix epoch
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Witness signature of the block
	WitnessSignature []byte `protobuf:"bytes,8,opt,name=witness_signature,json=witnessSignature,proto3" json:"witness_signature,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *BlockHeader) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BlockHeader) GetTxTrieRoot() []byte {
	if x != nil {
		return x.TxTrieRoot
	}
	return nil
}

func (x *BlockHeader) GetWitnessAddress() []byte {
	if x != nil {
		return x.WitnessAddress
	}
	return nil
}

func (x *BlockHeader) GetParentNumber() uint64 {
	if x != nil {
		return x.ParentNumber
	}
	return 0
}

func (x *BlockHeader) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *BlockHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetWitnessSignature() []byte {
	if x != nil {
		return x.WitnessSignature
	}
	return nil
}

// Transaction represents a flattened Tron transaction
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transaction hash in bytes
	Txid []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	// NOTE: only support size = 1, repeated list here for muti-sig extension
	// source: https://buf.build/streamingfast/tron-protocol/file/main:core/Tron.proto#L448
	Signature     [][]byte `protobuf:"bytes,2,rep,name=signature,proto3" json:"signature,omitempty"`
	RefBlockBytes []byte   `protobuf:"bytes,3,opt,name=ref_block_bytes,json=refBlockBytes,proto3" json:"ref_block_bytes,omitempty"`
	RefBlockHash  []byte   `protobuf:"bytes,4,opt,name=ref_block_hash,json=refBlockHash,proto3" json:"ref_block_hash,omitempty"`
	// Transaction expiration timestamp in milliseconds
	Expiration int64 `protobuf:"varint,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// Transaction creation timestamp in milliseconds
	Timestamp int64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Contract execution result in bytes
	ContractResult [][]byte `protobuf:"bytes,7,rep,name=contract_result,json=contractResult,proto3" json:"contract_result,omitempty"`
	Result         bool     `protobuf:"varint,8,opt,name=result,proto3" json:"result,omitempty"`
	// Transaction execution status code (see ResponseCode enum)
	Code ResponseCode `protobuf:"varint,9,opt,name=code,proto3,enum=sf.tron.type.v1.ResponseCode" json:"code,omitempty"`
	// Return message if any
	Message []byte `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	// Energy consumed by the transaction
	EnergyUsed int64 `protobuf:"varint,11,opt,name=energy_used,json=energyUsed,proto3" json:"energy_used,omitempty"`
	// Energy penalty for the transaction
	EnergyPenalty int64 `protobuf:"varint,12,opt,name=energy_penalty,json=energyPenalty,proto3" json:"energy_penalty,omitempty"`
	// Raw TransactionInfo from the Tron protocol containing execution details
	// source: https://buf.build/streamingfast/tron-protocol/file/main:core/Tron.proto#L453
	Info *core.TransactionInfo `protobuf:"bytes,13,opt,name=info,proto3" json:"info,omitempty"`
	// List of contracts executed in this transaction
	// source: https://buf.build/streamingfast/tron-protocol/file/main:core/Tron.proto#L337
	// NOTE: only support size = 1, repeated list here for extension
	// source: https://buf.build/streamingfast/tron-protocol/file/main:core/Tron.proto#L439
	Contracts     []*core.Transaction_Contract `protobuf:"bytes,14,rep,name=contracts,proto3" json:"contracts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

func (x *Transaction) GetSignature() [][]byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetRefBlockBytes() []byte {
	if x != nil {
		return x.RefBlockBytes
	}
	return nil
}

func (x *Transaction) GetRefBlockHash() []byte {
	if x != nil {
		return x.RefBlockHash
	}
	return nil
}

func (x *Transaction) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetContractResult() [][]byte {
	if x != nil {
		return x.ContractResult
	}
	return nil
}

func (x *Transaction) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *Transaction) GetCode() ResponseCode {
	if x != nil {
		return x.Code
	}
	return ResponseCode_SUCCESS
}

func (x *Transaction) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Transaction) GetEnergyUsed() int64 {
	if x != nil {
		return x.EnergyUsed
	}
	return 0
}

func (x *Transaction) GetEnergyPenalty() int64 {
	if x != nil {
		return x.EnergyPenalty
	}
	return 0
}

func (x *Transaction) GetInfo() *core.TransactionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Transaction) GetContracts() []*core.Transaction_Contract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

var File_sf_tron_type_v1_block_proto protoreflect.FileDescriptor

const file_sf_tron_type_v1_block_proto_rawDesc = "" +
	"\n" +
	"\x1bsf/tron/type/v1/block.proto\x12\x0fsf.tron.type.v1\x1a\x19google/protobuf/any.proto\x1a\x0fcore/Tron.proto\"\x8f\x01\n" +
	"\x05Block\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x124\n" +
	"\x06header\x18\x02 \x01(\v2\x1c.sf.tron.type.v1.BlockHeaderR\x06header\x12@\n" +
	"\ftransactions\x18\x03 \x03(\v2\x1c.sf.tron.type.v1.TransactionR\ftransactions\"\x9b\x02\n" +
	"\vBlockHeader\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x04R\x06number\x12 \n" +
	"\ftx_trie_root\x18\x02 \x01(\fR\n" +
	"txTrieRoot\x12'\n" +
	"\x0fwitness_address\x18\x03 \x01(\fR\x0ewitnessAddress\x12#\n" +
	"\rparent_number\x18\x04 \x01(\x04R\fparentNumber\x12\x1f\n" +
	"\vparent_hash\x18\x05 \x01(\fR\n" +
	"parentHash\x12\x18\n" +
	"\aversion\x18\x06 \x01(\rR\aversion\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\x12+\n" +
	"\x11witness_signature\x18\b \x01(\fR\x10witnessSignature\"\x8e\x04\n" +
	"\vTransaction\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\fR\x04txid\x12\x1c\n" +
	"\tsignature\x18\x02 \x03(\fR\tsignature\x12&\n" +
	"\x0fref_block_bytes\x18\x03 \x01(\fR\rrefBlockBytes\x12$\n" +
	"\x0eref_block_hash\x18\x04 \x01(\fR\frefBlockHash\x12\x1e\n" +
	"\n" +
	"expiration\x18\x05 \x01(\x03R\n" +
	"expiration\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12'\n" +
	"\x0fcontract_result\x18\a \x03(\fR\x0econtractResult\x12\x16\n" +
	"\x06result\x18\b \x01(\bR\x06result\x121\n" +
	"\x04code\x18\t \x01(\x0e2\x1d.sf.tron.type.v1.ResponseCodeR\x04code\x12\x18\n" +
	"\amessage\x18\n" +
	" \x01(\fR\amessage\x12\x1f\n" +
	"\venergy_used\x18\v \x01(\x03R\n" +
	"energyUsed\x12%\n" +
	"\x0eenergy_penalty\x18\f \x01(\x03R\renergyPenalty\x12-\n" +
	"\x04info\x18\r \x01(\v2\x19.protocol.TransactionInfoR\x04info\x12<\n" +
	"\tcontracts\x18\x0e \x03(\v2\x1e.protocol.Transaction.ContractR\tcontracts*\xd1\x02\n" +
	"\fResponseCode\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\f\n" +
	"\bSIGERROR\x10\x01\x12\x1b\n" +
	"\x17CONTRACT_VALIDATE_ERROR\x10\x02\x12\x16\n" +
	"\x12CONTRACT_EXE_ERROR\x10\x03\x12\x12\n" +
	"\x0eBANDWITH_ERROR\x10\x04\x12\x19\n" +
	"\x15DUP_TRANSACTION_ERROR\x10\x05\x12\x0f\n" +
	"\vTAPOS_ERROR\x10\x06\x12\x1d\n" +
	"\x19TOO_BIG_TRANSACTION_ERROR\x10\a\x12 \n" +
	"\x1cTRANSACTION_EXPIRATION_ERROR\x10\b\x12\x0f\n" +
	"\vSERVER_BUSY\x10\t\x12\x11\n" +
	"\rNO_CONNECTION\x10\n" +
	"\x12#\n" +
	"\x1fNOT_ENOUGH_EFFECTIVE_CONNECTION\x10\v\x12\x16\n" +
	"\x12BLOCK_UNSOLIDIFIED\x10\f\x12\x0f\n" +
	"\vOTHER_ERROR\x10\x14BBZ@github.com/streamingfast/firehose-tron/pb/sf/tron/type/v1;pbtronb\x06proto3"

var (
	file_sf_tron_type_v1_block_proto_rawDescOnce sync.Once
	file_sf_tron_type_v1_block_proto_rawDescData []byte
)

func file_sf_tron_type_v1_block_proto_rawDescGZIP() []byte {
	file_sf_tron_type_v1_block_proto_rawDescOnce.Do(func() {
		file_sf_tron_type_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sf_tron_type_v1_block_proto_rawDesc), len(file_sf_tron_type_v1_block_proto_rawDesc)))
	})
	return file_sf_tron_type_v1_block_proto_rawDescData
}

var file_sf_tron_type_v1_block_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sf_tron_type_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sf_tron_type_v1_block_proto_goTypes = []any{
	(ResponseCode)(0),                 // 0: sf.tron.type.v1.ResponseCode
	(*Block)(nil),                     // 1: sf.tron.type.v1.Block
	(*BlockHeader)(nil),               // 2: sf.tron.type.v1.BlockHeader
	(*Transaction)(nil),               // 3: sf.tron.type.v1.Transaction
	(*core.TransactionInfo)(nil),      // 4: protocol.TransactionInfo
	(*core.Transaction_Contract)(nil), // 5: protocol.Transaction.Contract
}
var file_sf_tron_type_v1_block_proto_depIdxs = []int32{
	2, // 0: sf.tron.type.v1.Block.header:type_name -> sf.tron.type.v1.BlockHeader
	3, // 1: sf.tron.type.v1.Block.transactions:type_name -> sf.tron.type.v1.Transaction
	0, // 2: sf.tron.type.v1.Transaction.code:type_name -> sf.tron.type.v1.ResponseCode
	4, // 3: sf.tron.type.v1.Transaction.info:type_name -> protocol.TransactionInfo
	5, // 4: sf.tron.type.v1.Transaction.contracts:type_name -> protocol.Transaction.Contract
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sf_tron_type_v1_block_proto_init() }
func file_sf_tron_type_v1_block_proto_init() {
	if File_sf_tron_type_v1_block_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sf_tron_type_v1_block_proto_rawDesc), len(file_sf_tron_type_v1_block_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_tron_type_v1_block_proto_goTypes,
		DependencyIndexes: file_sf_tron_type_v1_block_proto_depIdxs,
		EnumInfos:         file_sf_tron_type_v1_block_proto_enumTypes,
		MessageInfos:      file_sf_tron_type_v1_block_proto_msgTypes,
	}.Build()
	File_sf_tron_type_v1_block_proto = out.File
	file_sf_tron_type_v1_block_proto_goTypes = nil
	file_sf_tron_type_v1_block_proto_depIdxs = nil
}
