// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: sf/tron/type/v1/block.proto

package pbtron

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Contract_ContractType int32

const (
	Contract_UNKNOWN                   Contract_ContractType = 0
	Contract_ACCOUNT_CREATE            Contract_ContractType = 1
	Contract_TRANSFER                  Contract_ContractType = 2
	Contract_TRANSFER_ASSET            Contract_ContractType = 3
	Contract_VOTE_ASSET                Contract_ContractType = 4
	Contract_VOTE_WITNESS              Contract_ContractType = 5
	Contract_WITNESS_CREATE            Contract_ContractType = 6
	Contract_ASSET_ISSUE               Contract_ContractType = 7
	Contract_WITNESS_UPDATE            Contract_ContractType = 8
	Contract_PARTICIPATE_ASSET_ISSUE   Contract_ContractType = 9
	Contract_ACCOUNT_UPDATE            Contract_ContractType = 10
	Contract_FREEZE_BALANCE            Contract_ContractType = 11
	Contract_UNFREEZE_BALANCE          Contract_ContractType = 12
	Contract_WITHDRAW_BALANCE          Contract_ContractType = 13
	Contract_UNFREEZE_ASSET            Contract_ContractType = 14
	Contract_UPDATE_ASSET              Contract_ContractType = 15
	Contract_PROPOSAL_CREATE           Contract_ContractType = 16
	Contract_PROPOSAL_APPROVE          Contract_ContractType = 17
	Contract_PROPOSAL_DELETE           Contract_ContractType = 18
	Contract_SET_ACCOUNT_ID            Contract_ContractType = 19
	Contract_CUSTOM                    Contract_ContractType = 20
	Contract_CREATE_SMART_CONTRACT     Contract_ContractType = 30
	Contract_TRIGGER_SMART_CONTRACT    Contract_ContractType = 31
	Contract_GET_CONTRACT              Contract_ContractType = 32
	Contract_UPDATE_SETTING            Contract_ContractType = 33
	Contract_EXCHANGE_CREATE           Contract_ContractType = 41
	Contract_EXCHANGE_INJECT           Contract_ContractType = 42
	Contract_EXCHANGE_WITHDRAW         Contract_ContractType = 43
	Contract_EXCHANGE_TRANSACTION      Contract_ContractType = 44
	Contract_UPDATE_ENERGY_LIMIT       Contract_ContractType = 45
	Contract_ACCOUNT_PERMISSION_UPDATE Contract_ContractType = 46
	Contract_CLEAR_ABI                 Contract_ContractType = 48
	Contract_UPDATE_BROKERAGE          Contract_ContractType = 49
	Contract_SHIELDED_TRANSFER         Contract_ContractType = 51
	Contract_MARKET_SELL_ASSET         Contract_ContractType = 52
	Contract_MARKET_CANCEL_ORDER       Contract_ContractType = 53
	Contract_FREEZE_BALANCE_V2         Contract_ContractType = 54
	Contract_UNFREEZE_BALANCE_V2       Contract_ContractType = 55
	Contract_WITHDRAW_EXPIRE_UNFREEZE  Contract_ContractType = 56
	Contract_DELEGATE_RESOURCE         Contract_ContractType = 57
	Contract_UNDELEGATE_RESOURCE       Contract_ContractType = 58
	Contract_CANCEL_ALL_UNFREEZE_V2    Contract_ContractType = 59
)

// Enum value maps for Contract_ContractType.
var (
	Contract_ContractType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "ACCOUNT_CREATE",
		2:  "TRANSFER",
		3:  "TRANSFER_ASSET",
		4:  "VOTE_ASSET",
		5:  "VOTE_WITNESS",
		6:  "WITNESS_CREATE",
		7:  "ASSET_ISSUE",
		8:  "WITNESS_UPDATE",
		9:  "PARTICIPATE_ASSET_ISSUE",
		10: "ACCOUNT_UPDATE",
		11: "FREEZE_BALANCE",
		12: "UNFREEZE_BALANCE",
		13: "WITHDRAW_BALANCE",
		14: "UNFREEZE_ASSET",
		15: "UPDATE_ASSET",
		16: "PROPOSAL_CREATE",
		17: "PROPOSAL_APPROVE",
		18: "PROPOSAL_DELETE",
		19: "SET_ACCOUNT_ID",
		20: "CUSTOM",
		30: "CREATE_SMART_CONTRACT",
		31: "TRIGGER_SMART_CONTRACT",
		32: "GET_CONTRACT",
		33: "UPDATE_SETTING",
		41: "EXCHANGE_CREATE",
		42: "EXCHANGE_INJECT",
		43: "EXCHANGE_WITHDRAW",
		44: "EXCHANGE_TRANSACTION",
		45: "UPDATE_ENERGY_LIMIT",
		46: "ACCOUNT_PERMISSION_UPDATE",
		48: "CLEAR_ABI",
		49: "UPDATE_BROKERAGE",
		51: "SHIELDED_TRANSFER",
		52: "MARKET_SELL_ASSET",
		53: "MARKET_CANCEL_ORDER",
		54: "FREEZE_BALANCE_V2",
		55: "UNFREEZE_BALANCE_V2",
		56: "WITHDRAW_EXPIRE_UNFREEZE",
		57: "DELEGATE_RESOURCE",
		58: "UNDELEGATE_RESOURCE",
		59: "CANCEL_ALL_UNFREEZE_V2",
	}
	Contract_ContractType_value = map[string]int32{
		"UNKNOWN":                   0,
		"ACCOUNT_CREATE":            1,
		"TRANSFER":                  2,
		"TRANSFER_ASSET":            3,
		"VOTE_ASSET":                4,
		"VOTE_WITNESS":              5,
		"WITNESS_CREATE":            6,
		"ASSET_ISSUE":               7,
		"WITNESS_UPDATE":            8,
		"PARTICIPATE_ASSET_ISSUE":   9,
		"ACCOUNT_UPDATE":            10,
		"FREEZE_BALANCE":            11,
		"UNFREEZE_BALANCE":          12,
		"WITHDRAW_BALANCE":          13,
		"UNFREEZE_ASSET":            14,
		"UPDATE_ASSET":              15,
		"PROPOSAL_CREATE":           16,
		"PROPOSAL_APPROVE":          17,
		"PROPOSAL_DELETE":           18,
		"SET_ACCOUNT_ID":            19,
		"CUSTOM":                    20,
		"CREATE_SMART_CONTRACT":     30,
		"TRIGGER_SMART_CONTRACT":    31,
		"GET_CONTRACT":              32,
		"UPDATE_SETTING":            33,
		"EXCHANGE_CREATE":           41,
		"EXCHANGE_INJECT":           42,
		"EXCHANGE_WITHDRAW":         43,
		"EXCHANGE_TRANSACTION":      44,
		"UPDATE_ENERGY_LIMIT":       45,
		"ACCOUNT_PERMISSION_UPDATE": 46,
		"CLEAR_ABI":                 48,
		"UPDATE_BROKERAGE":          49,
		"SHIELDED_TRANSFER":         51,
		"MARKET_SELL_ASSET":         52,
		"MARKET_CANCEL_ORDER":       53,
		"FREEZE_BALANCE_V2":         54,
		"UNFREEZE_BALANCE_V2":       55,
		"WITHDRAW_EXPIRE_UNFREEZE":  56,
		"DELEGATE_RESOURCE":         57,
		"UNDELEGATE_RESOURCE":       58,
		"CANCEL_ALL_UNFREEZE_V2":    59,
	}
)

func (x Contract_ContractType) Enum() *Contract_ContractType {
	p := new(Contract_ContractType)
	*p = x
	return p
}

func (x Contract_ContractType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contract_ContractType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_tron_type_v1_block_proto_enumTypes[0].Descriptor()
}

func (Contract_ContractType) Type() protoreflect.EnumType {
	return &file_sf_tron_type_v1_block_proto_enumTypes[0]
}

func (x Contract_ContractType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contract_ContractType.Descriptor instead.
func (Contract_ContractType) EnumDescriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{3, 0}
}

// Block represents a Tron block from the RPC response
type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Header        *BlockHeader           `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Transactions  []*Transaction         `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// BlockHeader represents the block header from the RPC response
type BlockHeader struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Number           uint64                 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	TxTrieRoot       []byte                 `protobuf:"bytes,2,opt,name=tx_trie_root,json=txTrieRoot,proto3" json:"tx_trie_root,omitempty"`
	WitnessAddress   []byte                 `protobuf:"bytes,3,opt,name=witness_address,json=witnessAddress,proto3" json:"witness_address,omitempty"`
	ParentNumber     uint64                 `protobuf:"varint,4,opt,name=parent_number,json=parentNumber,proto3" json:"parent_number,omitempty"`
	ParentHash       []byte                 `protobuf:"bytes,5,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Version          uint32                 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp        int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WitnessSignature []byte                 `protobuf:"bytes,8,opt,name=witness_signature,json=witnessSignature,proto3" json:"witness_signature,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *BlockHeader) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BlockHeader) GetTxTrieRoot() []byte {
	if x != nil {
		return x.TxTrieRoot
	}
	return nil
}

func (x *BlockHeader) GetWitnessAddress() []byte {
	if x != nil {
		return x.WitnessAddress
	}
	return nil
}

func (x *BlockHeader) GetParentNumber() uint64 {
	if x != nil {
		return x.ParentNumber
	}
	return 0
}

func (x *BlockHeader) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *BlockHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetWitnessSignature() []byte {
	if x != nil {
		return x.WitnessSignature
	}
	return nil
}

// Transaction represents a flattened Tron transaction
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic transaction info
	Txid          []byte   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Signature     [][]byte `protobuf:"bytes,2,rep,name=signature,proto3" json:"signature,omitempty"`
	RefBlockBytes []byte   `protobuf:"bytes,3,opt,name=ref_block_bytes,json=refBlockBytes,proto3" json:"ref_block_bytes,omitempty"`
	RefBlockHash  []byte   `protobuf:"bytes,4,opt,name=ref_block_hash,json=refBlockHash,proto3" json:"ref_block_hash,omitempty"`
	Expiration    int64    `protobuf:"varint,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Timestamp     int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// TODO Add proper type for this
	// Raw TransactionExtention
	TransactionExtention *anypb.Any `protobuf:"bytes,7,opt,name=transaction_extention,json=transactionExtention,proto3" json:"transaction_extention,omitempty"`
	// TODO Add proper type for this
	// Raw TransactionInfo
	TransactionInfo *anypb.Any `protobuf:"bytes,8,opt,name=transaction_info,json=transactionInfo,proto3" json:"transaction_info,omitempty"`
	// Contract info
	Contracts     []*Contract `protobuf:"bytes,9,rep,name=contracts,proto3" json:"contracts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

func (x *Transaction) GetSignature() [][]byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetRefBlockBytes() []byte {
	if x != nil {
		return x.RefBlockBytes
	}
	return nil
}

func (x *Transaction) GetRefBlockHash() []byte {
	if x != nil {
		return x.RefBlockHash
	}
	return nil
}

func (x *Transaction) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetTransactionExtention() *anypb.Any {
	if x != nil {
		return x.TransactionExtention
	}
	return nil
}

func (x *Transaction) GetTransactionInfo() *anypb.Any {
	if x != nil {
		return x.TransactionInfo
	}
	return nil
}

func (x *Transaction) GetContracts() []*Contract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

// Contract represents a transaction contract
type Contract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Contract_ContractType  `protobuf:"varint,1,opt,name=type,proto3,enum=sf.tron.type.v1.Contract_ContractType" json:"type,omitempty"`
	Parameter     *anypb.Any             `protobuf:"bytes,2,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Provider      []byte                 `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	ContractName  []byte                 `protobuf:"bytes,4,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	PermissionId  int32                  `protobuf:"varint,5,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contract) Reset() {
	*x = Contract{}
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_sf_tron_type_v1_block_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_sf_tron_type_v1_block_proto_rawDescGZIP(), []int{3}
}

func (x *Contract) GetType() Contract_ContractType {
	if x != nil {
		return x.Type
	}
	return Contract_UNKNOWN
}

func (x *Contract) GetParameter() *anypb.Any {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *Contract) GetProvider() []byte {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *Contract) GetContractName() []byte {
	if x != nil {
		return x.ContractName
	}
	return nil
}

func (x *Contract) GetPermissionId() int32 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

var File_sf_tron_type_v1_block_proto protoreflect.FileDescriptor

const file_sf_tron_type_v1_block_proto_rawDesc = "" +
	"\n" +
	"\x1bsf/tron/type/v1/block.proto\x12\x0fsf.tron.type.v1\x1a\x19google/protobuf/any.proto\"\x8f\x01\n" +
	"\x05Block\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x124\n" +
	"\x06header\x18\x02 \x01(\v2\x1c.sf.tron.type.v1.BlockHeaderR\x06header\x12@\n" +
	"\ftransactions\x18\x03 \x03(\v2\x1c.sf.tron.type.v1.TransactionR\ftransactions\"\x9b\x02\n" +
	"\vBlockHeader\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x04R\x06number\x12 \n" +
	"\ftx_trie_root\x18\x02 \x01(\fR\n" +
	"txTrieRoot\x12'\n" +
	"\x0fwitness_address\x18\x03 \x01(\fR\x0ewitnessAddress\x12#\n" +
	"\rparent_number\x18\x04 \x01(\x04R\fparentNumber\x12\x1f\n" +
	"\vparent_hash\x18\x05 \x01(\fR\n" +
	"parentHash\x12\x18\n" +
	"\aversion\x18\x06 \x01(\rR\aversion\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\x12+\n" +
	"\x11witness_signature\x18\b \x01(\fR\x10witnessSignature\"\x90\x03\n" +
	"\vTransaction\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\fR\x04txid\x12\x1c\n" +
	"\tsignature\x18\x02 \x03(\fR\tsignature\x12&\n" +
	"\x0fref_block_bytes\x18\x03 \x01(\fR\rrefBlockBytes\x12$\n" +
	"\x0eref_block_hash\x18\x04 \x01(\fR\frefBlockHash\x12\x1e\n" +
	"\n" +
	"expiration\x18\x05 \x01(\x03R\n" +
	"expiration\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12I\n" +
	"\x15transaction_extention\x18\a \x01(\v2\x14.google.protobuf.AnyR\x14transactionExtention\x12?\n" +
	"\x10transaction_info\x18\b \x01(\v2\x14.google.protobuf.AnyR\x0ftransactionInfo\x127\n" +
	"\tcontracts\x18\t \x03(\v2\x19.sf.tron.type.v1.ContractR\tcontracts\"\xfc\b\n" +
	"\bContract\x12:\n" +
	"\x04type\x18\x01 \x01(\x0e2&.sf.tron.type.v1.Contract.ContractTypeR\x04type\x122\n" +
	"\tparameter\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\tparameter\x12\x1a\n" +
	"\bprovider\x18\x03 \x01(\fR\bprovider\x12#\n" +
	"\rcontract_name\x18\x04 \x01(\fR\fcontractName\x12#\n" +
	"\rpermission_id\x18\x05 \x01(\x05R\fpermissionId\"\x99\a\n" +
	"\fContractType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x12\n" +
	"\x0eACCOUNT_CREATE\x10\x01\x12\f\n" +
	"\bTRANSFER\x10\x02\x12\x12\n" +
	"\x0eTRANSFER_ASSET\x10\x03\x12\x0e\n" +
	"\n" +
	"VOTE_ASSET\x10\x04\x12\x10\n" +
	"\fVOTE_WITNESS\x10\x05\x12\x12\n" +
	"\x0eWITNESS_CREATE\x10\x06\x12\x0f\n" +
	"\vASSET_ISSUE\x10\a\x12\x12\n" +
	"\x0eWITNESS_UPDATE\x10\b\x12\x1b\n" +
	"\x17PARTICIPATE_ASSET_ISSUE\x10\t\x12\x12\n" +
	"\x0eACCOUNT_UPDATE\x10\n" +
	"\x12\x12\n" +
	"\x0eFREEZE_BALANCE\x10\v\x12\x14\n" +
	"\x10UNFREEZE_BALANCE\x10\f\x12\x14\n" +
	"\x10WITHDRAW_BALANCE\x10\r\x12\x12\n" +
	"\x0eUNFREEZE_ASSET\x10\x0e\x12\x10\n" +
	"\fUPDATE_ASSET\x10\x0f\x12\x13\n" +
	"\x0fPROPOSAL_CREATE\x10\x10\x12\x14\n" +
	"\x10PROPOSAL_APPROVE\x10\x11\x12\x13\n" +
	"\x0fPROPOSAL_DELETE\x10\x12\x12\x12\n" +
	"\x0eSET_ACCOUNT_ID\x10\x13\x12\n" +
	"\n" +
	"\x06CUSTOM\x10\x14\x12\x19\n" +
	"\x15CREATE_SMART_CONTRACT\x10\x1e\x12\x1a\n" +
	"\x16TRIGGER_SMART_CONTRACT\x10\x1f\x12\x10\n" +
	"\fGET_CONTRACT\x10 \x12\x12\n" +
	"\x0eUPDATE_SETTING\x10!\x12\x13\n" +
	"\x0fEXCHANGE_CREATE\x10)\x12\x13\n" +
	"\x0fEXCHANGE_INJECT\x10*\x12\x15\n" +
	"\x11EXCHANGE_WITHDRAW\x10+\x12\x18\n" +
	"\x14EXCHANGE_TRANSACTION\x10,\x12\x17\n" +
	"\x13UPDATE_ENERGY_LIMIT\x10-\x12\x1d\n" +
	"\x19ACCOUNT_PERMISSION_UPDATE\x10.\x12\r\n" +
	"\tCLEAR_ABI\x100\x12\x14\n" +
	"\x10UPDATE_BROKERAGE\x101\x12\x15\n" +
	"\x11SHIELDED_TRANSFER\x103\x12\x15\n" +
	"\x11MARKET_SELL_ASSET\x104\x12\x17\n" +
	"\x13MARKET_CANCEL_ORDER\x105\x12\x15\n" +
	"\x11FREEZE_BALANCE_V2\x106\x12\x17\n" +
	"\x13UNFREEZE_BALANCE_V2\x107\x12\x1c\n" +
	"\x18WITHDRAW_EXPIRE_UNFREEZE\x108\x12\x15\n" +
	"\x11DELEGATE_RESOURCE\x109\x12\x17\n" +
	"\x13UNDELEGATE_RESOURCE\x10:\x12\x1a\n" +
	"\x16CANCEL_ALL_UNFREEZE_V2\x10;BBZ@github.com/streamingfast/firehose-tron/pb/sf/tron/type/v1;pbtronb\x06proto3"

var (
	file_sf_tron_type_v1_block_proto_rawDescOnce sync.Once
	file_sf_tron_type_v1_block_proto_rawDescData []byte
)

func file_sf_tron_type_v1_block_proto_rawDescGZIP() []byte {
	file_sf_tron_type_v1_block_proto_rawDescOnce.Do(func() {
		file_sf_tron_type_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sf_tron_type_v1_block_proto_rawDesc), len(file_sf_tron_type_v1_block_proto_rawDesc)))
	})
	return file_sf_tron_type_v1_block_proto_rawDescData
}

var file_sf_tron_type_v1_block_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sf_tron_type_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sf_tron_type_v1_block_proto_goTypes = []any{
	(Contract_ContractType)(0), // 0: sf.tron.type.v1.Contract.ContractType
	(*Block)(nil),              // 1: sf.tron.type.v1.Block
	(*BlockHeader)(nil),        // 2: sf.tron.type.v1.BlockHeader
	(*Transaction)(nil),        // 3: sf.tron.type.v1.Transaction
	(*Contract)(nil),           // 4: sf.tron.type.v1.Contract
	(*anypb.Any)(nil),          // 5: google.protobuf.Any
}
var file_sf_tron_type_v1_block_proto_depIdxs = []int32{
	2, // 0: sf.tron.type.v1.Block.header:type_name -> sf.tron.type.v1.BlockHeader
	3, // 1: sf.tron.type.v1.Block.transactions:type_name -> sf.tron.type.v1.Transaction
	5, // 2: sf.tron.type.v1.Transaction.transaction_extention:type_name -> google.protobuf.Any
	5, // 3: sf.tron.type.v1.Transaction.transaction_info:type_name -> google.protobuf.Any
	4, // 4: sf.tron.type.v1.Transaction.contracts:type_name -> sf.tron.type.v1.Contract
	0, // 5: sf.tron.type.v1.Contract.type:type_name -> sf.tron.type.v1.Contract.ContractType
	5, // 6: sf.tron.type.v1.Contract.parameter:type_name -> google.protobuf.Any
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_sf_tron_type_v1_block_proto_init() }
func file_sf_tron_type_v1_block_proto_init() {
	if File_sf_tron_type_v1_block_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sf_tron_type_v1_block_proto_rawDesc), len(file_sf_tron_type_v1_block_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_tron_type_v1_block_proto_goTypes,
		DependencyIndexes: file_sf_tron_type_v1_block_proto_depIdxs,
		EnumInfos:         file_sf_tron_type_v1_block_proto_enumTypes,
		MessageInfos:      file_sf_tron_type_v1_block_proto_msgTypes,
	}.Build()
	File_sf_tron_type_v1_block_proto = out.File
	file_sf_tron_type_v1_block_proto_goTypes = nil
	file_sf_tron_type_v1_block_proto_depIdxs = nil
}
