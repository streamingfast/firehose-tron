---
name: Build docker image

on:
  push:
    tags:
      - "v*"
    branches:
      - "*"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v4

      - name: Extract version
        id: extract-version
        run: |
          version="edge-${GITHUB_SHA::7}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            version=${GITHUB_REF#refs/tags/}
          fi

          echo "VERSION=${version}" >> "$GITHUB_OUTPUT"

      - name: Extract Firehose Core version
        id: extract-firecore-version
        run: |
          docker pull ghcr.io/streamingfast/firehose-core:latest
          echo VERSION=$(docker inspect --format='{{index .Config.Labels "org.opencontainers.image.version"}}' 'ghcr.io/streamingfast/firehose-core:latest') >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker tags/labels from github build context
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=sha,prefix=,enable=true
            type=raw,enable=${{ github.ref == 'refs/heads/main' }},value=main
            type=raw,enable=${{ github.ref == 'refs/heads/develop' }},value=develop
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            FIRECORE_VERSION=${{ steps.extract-firecore-version.outputs.VERSION }}
            VERSION=${{ steps.extract-version.outputs.VERSION }}

  slack-notifications:
    needs: [build]
    runs-on: ubuntu-24.04
    steps:
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        uses: Ilshidur/action-slack@2.1.0
        with:
          args: |
            :done: *${{ github.repository }}* Success building docker images from ${{ github.ref_type }} _${{ github.ref_name }}_ (${{ github.actor }}) :sparkling_heart: ```${{ join(needs.build.outputs.tags, ' ') }}```

